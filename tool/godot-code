extends CharacterBody2D


const SPEED = 400.0
const JUMP_VELOCITY = -600.0
@onready var sprite_2d: AnimatedSprite2D = $Sprite2D
@export var teleport_position := Vector2(650, -200)
@export var fall_limit := 	1000

func _physics_process(delta: float) -> void:
	# Fall teleport check
	if global_position.y > fall_limit:
		global_position = teleport_position
	# Animations
	if (velocity.x > 1 || velocity.x < -1): 
		sprite_2d.animation = "running"
	else:
		sprite_2d.animation = "default"
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta
		sprite_2d.animation = "jumping"
	# Handle jump.
	if Input.is_action_just_pressed("ui_accept") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis("move_left", "move_right")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, 10)

	move_and_slide()
	
	var isLeft = velocity.x < 0
	sprite_2d.flip_h = isLeft
	
	for i in get_slide_collision_count():
		var collision = get_slide_collision(i)
		if collision.get_collider().is_in_group("enemy"):
			global_position = teleport_position
	
------------------------
// COIN CODE
extends Area2D


func _on_Coin_body_entered(body):
	print("+1 coin!")
	queue_free()
func _ready():
	connect("body_entered", Callable(self, "_on_body_entered"))
